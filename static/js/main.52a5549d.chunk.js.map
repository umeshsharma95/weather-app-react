{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","showHeading","setShowHeading","search","e","key","className","style","display","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"+NAMaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDCqCVC,G,MAvCH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPV,EADO,KACAW,EADA,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,OAGwBH,oBAAS,GAHjC,mBAGPI,EAHO,KAGMC,EAHN,KAKRC,EAAM,uCAAG,WAAOC,GAAP,eAAAhB,EAAA,yDACE,UAAVgB,EAAEC,IADM,gCAEYnB,EAAaC,GAFzB,OAEDQ,EAFC,OAGPK,EAAWL,GACXG,EAAS,IACTI,GAAe,GALR,2CAAH,sDAUZ,OACI,sBAAKI,UAAU,iBAAf,UACI,oBAAKA,UAAU,UAAUC,MAAON,EAAc,GAAK,CAAEO,QAAS,QAA9D,yBACA,uBAAQC,KAAK,OAAOH,UAAU,SAASI,YAAY,sBAAsBC,MAAOxB,EAAOyB,SAAU,SAACR,GAAD,OAAON,EAASM,EAAES,OAAOF,QAAQG,WAAYX,IAC7IJ,EAAQgB,MACL,sBAAKT,UAAU,OAAf,UACG,qBAAIA,UAAU,YAAd,UACK,+BAAOP,EAAQiB,OACf,8BAAMjB,EAAQkB,IAAIC,aAEtB,sBAAKZ,UAAU,YAAf,UACKa,KAAKC,MAAMrB,EAAQgB,KAAKM,MACzB,2CAEJ,sBAAKf,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAYgB,IAAG,4CAAuCvB,EAAQA,QAAQ,GAAGwB,KAA1D,WAAyEC,IAAKzB,EAAQA,QAAQ,GAAG0B,cAC/H,4BAAI1B,EAAQA,QAAQ,GAAG0B,yBC7B/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.52a5549d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// const URL = 'https://api.openweathermap.org/data/2.5/weather?q={city name}&appid={API key}'\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'bb75ec54f44ef507c7e1aeb4bb964c23';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const { data } = await axios.get(URL, {\r\n        params: {\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY\r\n        }\r\n    });\r\n\r\n    return data;\r\n} ","import React, { useState } from 'react';\r\nimport { fetchWeather } from './api/fetchWeather';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [weather, setWeather] = useState({});\r\n    const [showHeading, setShowHeading] = useState(true)\r\n\r\n    const search = async (e) => {\r\n        if(e.key === 'Enter') {\r\n            const data = await fetchWeather(query)\r\n            setWeather(data);\r\n            setQuery('');\r\n            setShowHeading(false);\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-container\">\r\n            <h1  className=\"heading\" style={showHeading ? {} : { display: 'none' }}>Weather App</h1>\r\n            <input  type=\"text\" className=\"search\" placeholder=\"search... city name\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\r\n            {weather.main && (\r\n                <div className=\"city\">\r\n                   <h2 className=\"city-name\">\r\n                        <span>{weather.name}</span>\r\n                        <sup>{weather.sys.country}</sup>\r\n                    </h2>\r\n                    <div className=\"city-temp\">\r\n                        {Math.round(weather.main.temp)}\r\n                        <sup>&deg;C</sup>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\r\n                        <p>{weather.weather[0].description}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}